<?php

/**
 * @file
 * E-Resource logic.
 */

/**
 * Implements hook_views_data_alter().
 *
 * @param array<mixed> $data
 *   Existing implementations.
 */
function eonext_eresource_views_data_alter(array &$data): void {
  $data['node_field_data']['eresource_az_index'] = [
    'group' => 'EO Next',
    'title' => t('E-Resource alphabetical index'),
    'filter' => [
      'title' => t('Alphabetical index'),
      'help' => t('Expose alphabetical index to filter E-Resource content by first letter in title.'),
      'field' => 'title',
      'id' => 'eresource_az_index',
    ],
  ];
}

/**
 * Implements hook_theme().
 */
function eonext_eresource_theme(): array {
  return [
    'taxonomy_term__e_resource_category' => [
      'render element' => 'element',
      'base hook' => 'taxonomy_term',
    ],
    'node__e_resource__teaser' => [
      'render element' => 'element',
      'base hook' => 'node',
    ],
    'node__e_resource__full' => [
      'render element' => 'element',
      'base hook' => 'node',
    ],
    'field__node__e_resource' => [
      'render element' => 'item',
      'base hook' => 'field',
    ],
    'views_view_fields__e_resource_list__block' => [
      'variables' => [
        'view' => NULL,
        'row' => NULL,
        'options' => NULL,
      ],
    ],
    'views_view_unformatted__e_resource_list' => [
      'base hook' => 'views_view_unformatted',
    ],
    'views_view_field__field_e_resource_link' => [
      'base hook' => 'views_view_field',
    ],
  ];
}

function eonext_eresource_theme_suggestions_views_view_field_alter(array &$suggestions, array $variables): void {
  $suggestions[] = 'views_view_field__' . $variables['field']->field;
}

function eonext_eresource_theme_suggestions_views_view_unformatted_alter(array &$suggestions, array $variables): void {
  $suggestions[] = 'views_view_unformatted__' . $variables['view']->id();
}

function template_preprocess_views_view_field__field_e_resource_link(array &$variables): void {
  $row = $variables['row'];
  $field_name = $variables['field']->field;

  $items = [];
  foreach ($variables['row']->_entity->get($field_name) as $item) {
    $url = \Drupal\Core\Url::fromUri($item->uri);
    $link = \Drupal\Core\Link::fromTextAndUrl(t('See online'), $url)->toRenderable();
    $link['#attributes'] = [
      'class' => [
        'link-tag',
      ],
      'target' => '_blank',
      'title' => $item->title,
    ];

    $items[] = $link;
  }

  $variables['items'] = $items;
}

function template_preprocess_views_view_fields__e_resource_list__block(array &$variables): void {
  template_preprocess_views_view_fields($variables);

  foreach ($variables['fields'] as $field_name => $field) {
    $variables[$field_name] = [
      '#type' => 'html_tag',
      '#tag' => $field->wrapper_element,
      '#attributes' => $field->wrapper_attributes->toArray(),
      'child' => [
        '#type' => 'html_tag',
        '#tag' => $field->element_type,
        '#attributes' => $field->element_attributes->toArray(),
        '#value' => $field->content,
      ]
    ];
  }

  $node_link = $variables['row']->_entity->toLink()->toRenderable();
  $node_link['#title'] = t('See more');
  $node_link['#attributes']['class'][] = 'link-tag';

  $variables['see_more'] = [
    '#type' => 'html_tag',
    '#tag' => 'div',
    '#attributes' => [
      'class' => [
        'views-field',
        'views-field-see-more'
      ],
    ],
    'child' => [
      '#type' => 'html_tag',
      '#tag' => 'div',
      '#attributes' => [
        'class' => [
          'field-content',
        ],
      ],
      'child' => $node_link,
    ],
  ];
}

/**
 * Implements hook_preprocess().
 */
function eonext_eresource_preprocess_taxonomy_term(array &$variables): void {
  $vid = $variables['term']->get('vid')->entity->id();
  if ('e_resource_category' !== $vid) {
    return;
  }

  $variables['attributes']['class'][] = 'term--type-' . $vid;
  $variables['attributes']['class'][] = 'term--view-mode-' . $variables['view_mode'];

  $variables['#attached']['library'][] = 'eonext_eresource/core';
}

/**
 * Implements hook_preprocess_node().
 */
function eonext_eresource_preprocess_node(array &$variables): void {
  if ('e_resource' !== $variables['node']->bundle()) {
    return;
  }

  $variables['attributes']['class'][] = 'node--type-' . $variables['node']->bundle();
  $variables['attributes']['class'][] = 'node--view-mode-' . $variables['view_mode'];

  $variables['display_submitted'] = FALSE;

  $variables['#attached']['library'][] = 'eonext_eresource/core';
}
